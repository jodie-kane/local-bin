#!/bin/bash 

# Uses bash 'source' to implement engine specific settings / logic
# these are found in the 'engines.d' folder
# In the original version engines were simply a 'case' statement
# This is a workaround so the script can be open-sourced and keep some settings private
# TODO: provide user with flag to set 'engines.d' dir.

ROOT="$( realpath $( dirname ${0} ) )"
EDIR="${ROOT}/engines.d"

usg="\nUsage: lks [-b <w3m|links2|elinks>] [-e <wiki|wikifull|nethack|google|imdb|duck|pbay|urban|wikt|guten|scala|rarbg>] term1 [ term2 ...]\n\n"

if [[ $# -eq 0 ]]
then
  echo -ne "${usg}"
  exit 0
fi

OPTIND=
OPTARG=
all=1
psthru=""
browser=$( /usr/bin/printenv CONSOLE_BROWSER )
browser=${browser:-w3m}
engine="google"
proxy=
dryrun=""
terms=
while getopts 'ab:e:nop:' opt
do
  case "${opt}" in
    a) all=0;;
    b) browser=${OPTARG};;
    e) engine="${OPTARG}";;
    n) dryrun="echo";;
    p) psthru="${OPTARG}";;
    o) proxy="/usr/bin/env HTTP_PROXY=http://${PROXY_IP}:3128 HTTPS_PROXY=https://${PROXY_IP}:3128";;
   \?) echo -ne "${usg}"; exit 1;;
  esac

  shift $(( OPTIND - 1 ))
  OPTIND=

done

# choose a browser; defaults to: w3m
case "${browser}" in
  l|links2) browser="/usr/bin/links2 -html-numbered-links 1";
            if [[ -n "${proxy}" ]]
            then
              browser="${browser} -http-proxy ${PROXY_IP}:3128 -https-proxy ${PROXY_IP}:3128"
            fi;;
  w|w3m)    browser="/usr/bin/w3m -o display_link_number=1";
            if [[ $# -eq 0 ]]
            then
              browser="${browser} -B"
            fi;;
  e|elinks) browser="/usr/bin/elinks";;
  *) echo -ne "\nBrowser ${browser}, Not Found!\n\n";;
esac

# search terms are the remaining arguments
terms="${@}"
# default is: google
efile="${EDIR}/${engine}"

# source file to override engine specific variables
# i.e.,  url, browser, terms.
if [[ -f "${efile}" && -r "${efile}" ]]
then
 source "${efile}"
fi

# execute command
${dryrun} ${proxy} ${browser} ${psthru} "${url}${terms[@]}" 
